$date
    Apr 13, 2018  13:34:10
$end
$version
    TOOL:	ncsim(64)	14.10-s021
$end
$timescale
    1 ns
$end

$scope module main $end
$var reg       1 !    clk  $end
$var reg       1 "    reset  $end
$var reg       1 #    branch  $end
$var reg       1 $    taken  $end
$var wire      1 %    prediction  $end
$var reg       1 &    correct  $end

$scope module uut $end
$var parameter 32 '    N  $end
$var reg       4 (    max [3:0] $end
$var reg       4 )    counter_o [3:0] $end
$var wire      1 *    counter_n [3] $end
$var wire      1 +    counter_n [2] $end
$var wire      1 ,    counter_n [1] $end
$var wire      1 -    counter_n [0] $end
$var wire      1 .    clk  $end
$var wire      1 /    reset  $end
$var wire      1 0    branch  $end
$var wire      1 1    taken  $end
$var wire      1 %    prediction  $end

$scope module add0 $end
$var wire      1 2    operand_a [3] $end
$var wire      1 3    operand_a [2] $end
$var wire      1 4    operand_a [1] $end
$var wire      1 5    operand_a [0] $end
$var wire      4 6    operand_b [3:0] $end
$var wire      1 7    mode  $end
$var wire      1 *    result [3] $end
$var wire      1 +    result [2] $end
$var wire      1 ,    result [1] $end
$var wire      1 -    result [0] $end
$var wire      1 8    co  $end
$var wire      4 9    operand_b_modified [3:0] $end

$scope module m1 $end
$var wire      1 2    a [3] $end
$var wire      1 3    a [2] $end
$var wire      1 4    a [1] $end
$var wire      1 5    a [0] $end
$var wire      1 :    b [3] $end
$var wire      1 ;    b [2] $end
$var wire      1 <    b [1] $end
$var wire      1 =    b [0] $end
$var wire      1 7    ci  $end
$var wire      1 *    sum [3] $end
$var wire      1 +    sum [2] $end
$var wire      1 ,    sum [1] $end
$var wire      1 -    sum [0] $end
$var wire      1 8    co  $end
$var wire      1 >    citmp [3] $end
$var wire      1 ?    citmp [2] $end
$var wire      1 @    citmp [1] $end
$var wire      1 A    citmp [0] $end

$scope module fa0 $end
$var wire      1 5    a  $end
$var wire      1 =    b  $end
$var wire      1 A    ci  $end
$var wire      1 -    sum  $end
$var wire      1 @    co  $end
$upscope $end


$scope module fa1 $end
$var wire      1 4    a  $end
$var wire      1 <    b  $end
$var wire      1 @    ci  $end
$var wire      1 ,    sum  $end
$var wire      1 ?    co  $end
$upscope $end


$scope module fa2 $end
$var wire      1 3    a  $end
$var wire      1 ;    b  $end
$var wire      1 ?    ci  $end
$var wire      1 +    sum  $end
$var wire      1 >    co  $end
$upscope $end


$scope module fa3 $end
$var wire      1 2    a  $end
$var wire      1 :    b  $end
$var wire      1 >    ci  $end
$var wire      1 *    sum  $end
$var wire      1 8    co  $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b10 '
0!
1"
0#
0$
x%
1&
b11 (
bx )
x*
x+
x,
x-
0.
1/
00
01
x2
x3
x4
x5
b1 6
17
x8
bz 9
1:
1;
1<
0=
x>
x?
x@
1A
$end
#5
1!
1.
b0 )
02
03
04
05
0%
0@
1-
0?
1,
0>
1+
08
1*
#10
0"
0!
0.
0/
#15
1!
1.
#20
1$
0!
0.
11
07
0A
0-
0:
0;
0<
1=
1-
0,
0+
0*
#25
1!
1.
#30
0!
0.
#35
1!
1.
#40
0!
0.
#45
1!
1.
#50
1#
0!
0.
10
#55
1!
1.
b1 )
15
1@
0-
1,
#60
0!
0.
#65
1!
1.
b10 )
14
05
1%
0@
1-
#70
0!
0.
#75
1!
1.
b11 )
15
1@
0-
1?
0,
1+
#80
0!
0.
#85
1!
1.
#90
0!
0.
#95
1!
1.
#100
0!
0.
#105
1!
1.
#110
0$
0!
0.
01
17
1A
1-
1:
1;
1<
0=
0-
1,
1>
0+
18
#115
1!
1.
b10 )
05
0@
1-
0,
#120
0!
0.
#125
1!
1.
b1 )
04
15
0%
1@
0-
#130
0!
0.
#135
1!
1.
b0 )
05
0@
1-
0?
1,
0>
1+
08
1*
#140
0!
0.
#145
1!
1.
#150
0!
0.
#155
1!
1.
#160
